{
  "swagger": "2.0",
  "info": {
    "description": "These APIs enable users to configure the Adapter Code for TIBCO API Exchange and Joomla! via a REST based web service. The documentation below can provide more details of the various operations supported.",
    "version": "1.0.0",
    "title": "API Exchange REST API",
    "termsOfService": "terms",
    "contact": {
      "url": "",
      "name": "",
      "email": ""
    },
    "license": {
      "name": "",
      "url": ""
    }
  },
  "host": "localhost/joomla",
  "basePath": "/v1",
  "schemes": [
    "http"
  ],
  "tags": [
  {
      "name": "Products",
      "description": "Operations about user"
    },
    {
      "name": "Applications",
      "description": "Access to Petstore orders",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Environments",
      "description": "Operations about user"
    },
    {
      "name": "APIs",
      "description": "Access to Petstore orders",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
	{
      "name": "Operations",
      "description": "Access to Petstore orders",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Login",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "login to Joomla",
        "description": " Use Your Joomla Credentials to Login to the REST API. You will recieve a session that expires after 30min. Please Login again after this time.",
        "operationId": "login",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "username",
            "description": "Your Joomla username",
            "required": false,
            "schema": {
            "type": "string"
            }
          },
		  {
            "in": "formData",
            "name": "password",
            "description": "Your Joomla password",
			"type": "string",
            "required": false,
            "schema": {
            "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "login Successful"
          },
		  "400": {
            "description": "login Unsuccessful"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      
      }
      
    },
 
   "/apis/{id}": {
      "get": {
        "tags": [
          "APIs"
        ],
        "summary": "Finds an API by id",
        "description": "Finds an API Based on it's Joomla ID number. If you don't know the ID number for your API please use the GET /apis to find it first.",
        "operationId": "findApiById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the API you wish to find",
            "required": true,
			"type": "integer",
            "format": "integer",
            "schema": {
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API found",
			"schema": {
              "$ref": "#/API"
            }
          },
		  "400": {
            "description": "API not Found"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
       
      }
      
    },
	
	"/apis/{idtodelete}": {
      "delete": {
        "tags": [
          "APIs"
        ],
        "summary": "Deletes an API by id",
        "description": "Input the ID of the API you wish to delete. If you do not know the id of your API please use /apis and then find the associated id ",
        "operationId": "deleteAPI",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idtodelete",
            "description": "Id of the API you wish to delete",
            "required": true,
			"type": "integer",
            "format": "integer",
            "schema": {
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API deleted"
          },
		  "400": {
            "description": "API not deleted"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
       
      }
      
    },   
	
	
    "/apis": {
      "get": {
        "tags": [
          "APIs"
        ],
        "summary": "Finds APIs",
        "description": "Returns a list of all the APIs you have access to view.",
        "operationId": "getPetById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "limits the number of APIs returned to the selected integer",
            "required": false,
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
		  "200": {
            "description": "APIs found"
          },
		  "400": {
            "description": "APIs not Found"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "APIs"
        ],
        "summary": "Adds a new API",
        "description": "Creates a new API that must be attached to an environment. If you do not know which environment you wish to attach your API to or the ID number please us GET /environments to get an ID or POST /environments to create a new one.",
        "operationId": "CreateNewAPI",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "title",
            "description": "Title of the new API",
            "required": true,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "description",
            "description": "Description of the new API",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "type",
            "description": "Type of the new API (accepts REST or SOAP all caps)",
            "required": true,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "environment",
            "description": "Id of the environment this API will be attached to",
            "required": true,
            "type": "integer"
          },
		  {
            "in": "formData",
            "name": "targetenvironment",
            "description": "Id of the target environment this API will be attached to",
            "required": false,
            "type": "integer"
          },
          {
            "in": "formData",
            "name": "file",
            "description": "The json/wsdl file you wish to use for this API",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "API created",
			"schema": {
              "$ref": "#/definitions/API"
            }
          },
		  "400": {
            "description": "API not Created"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
	  
	   "put": {
        "tags": [
          "APIs"
        ],
        "summary": "Updates an API",
        "description": "Uses the ID number of an API to update the information for that record. Does not change the ID number of the API if you do not know the ID number of the API you wish to update please use GET /apis.",
        "operationId": "updateAPI",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
		 {
            "in": "formData",
            "name": "id",
            "description": "The Joomla id of the API you wish to update",
            "required": true,
            "type": "integer",
			"format": "integer"
          },
         {
            "in": "formData",
            "name": "title",
            "description": "Edit the Title of the API",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "description",
            "description": "Edit the Description of the API",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "type",
            "description": "Edit the Type of the API (accepts REST or SOAP all caps)",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "environment",
            "description": "Edit the Id of the environment this API will be attached to",
            "required": false,
            "type": "integer"
          },
		  {
            "in": "formData",
            "name": "targetenvironment",
            "description": "Edit the Id of the target environment this API will be attached to",
            "required": false,
            "type": "integer"
          },
          {
            "in": "formData",
            "name": "file",
            "description": "Edit the json/wsdl file you wish to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "API updated"
          },
		  "400": {
            "description": "API not updated"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      }
	  
    },

	"/environments/{id}": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Finds an environment by id",
        "description": "Finds an Environment Based on it's Joomla ID number. If you don't know the ID number for your Environment please use the GET /environments to find it first.",
        "operationId": "getEnvironmentById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "description": "Id of the environment you wish to find",
            "required": true,
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found Environment"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
		}},
		
		   "/environments/{idtodelete}": {
      "delete": {
        "tags": [
          "Environments"
        ],
        "summary": "Deletes an Environment by id",
        "description": "Input the ID of the Environment you wish to delete. If you do not know the id of your Environment please use /environments and then find the associated id ",
        "operationId": "deleteAPI",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idtodelete",
            "description": "Id of the Environment you wish to delete",
            "required": true,
			"type": "integer",
            "format": "integer",
            "schema": {
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Environment deleted"
          },
		  "400": {
            "description": "Environment not deleted"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
       
      }
      
    },
	
	"/environments": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Finds environments",
        "description": "Returns a list of all the environments you have access to view",
        "operationId": "getEnvironments",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "limits the number of Environments returned to the selected integer",
            "required": false,
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "No Environments found"
          },
          "200": {
            "description": "Returned a list of Environments"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "Environments"
        ],
        "summary": "Adds a new environment",
        "description": "Creates a New Environment which you can then attach APIs too.",
        "operationId": "updatePetWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "title",
            "description": "Title of the new Environment",
            "required": true,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "description",
            "description": "Description of the new Environment",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "basePath",
            "description": "The Basepath you wish to have associated with the new Environment",
            "required": true,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "managedbygateway",
            "description": "Defaults to True. If enabled allows you to configure an API Exchange Gateway for your Environment",
            "required": true,
            "type": "Boolean"
          }
        ],
        "responses": {
          "400": {
            "description": "Environments not created"
          },
          "200": {
            "description": "Environments successfully created"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
	  
	   "put": {
        "tags": [
          "Environments"
        ],
        "summary": "Updates an environment",
        "description": "",
        "operationId": "updatePetWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
           {
            "in": "formData",
            "name": "id",
            "description": "The Joomla id of the Environment you wish to update",
            "required": true,
            "type": "integer",
			"format": "integer"
          },
		  {
            "in": "formData",
            "name": "title",
            "description": "Edit the Title of the Environment",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "description",
            "description": "Edit the Description of the Environment",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "basePath",
            "description": "Edit the Basepath you wish to have associated with the Environment",
            "required": false,
            "type": "string"
          },
		   {
            "in": "formData",
            "name": "type",
            "description": "The type of Environment you are Creating.",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "managedbygateway",
            "description": " Toggle the Managed by Gateway configuration. Defaults to True. If enabled allows you to configure an API Exchange Gateway for your Environment",
            "required": false,
            "type": "Boolean"
          }
        ],
        "responses": {
          "400": {
            "description": "Environments not updates"
          },
          "200": {
            "description": "Environments successfully updated"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      }
    },
	
	"/operations/{id}": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Finds an API by id",
        "description": "Finds an API Based on it's Joomla ID number. If you don't know the ID number for your API please use the GET /apis to find it first.",
        "operationId": "findApiById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the API you wish to find",
            "required": true,
			"type": "integer",
            "format": "integer",
            "schema": {
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API found",
			"schema": {
              "$ref": "#/API"
            }
          },
		  "400": {
            "description": "API not Found"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
       
      }
      
    },
	
	"/operations/{idtodelete}": {
      "delete": {
        "tags": [
          "Operations"
        ],
        "summary": "Deletes an API by id",
        "description": "Input the ID of the API you wish to delete. If you do not know the id of your API please use /apis and then find the associated id ",
        "operationId": "deleteAPI",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idtodelete",
            "description": "Id of the API you wish to delete",
            "required": true,
			"type": "integer",
            "format": "integer",
            "schema": {
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API deleted"
          },
		  "400": {
            "description": "API not deleted"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
       
      }
      
    },   
	
	
    "/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Finds APIs",
        "description": "Returns a list of all the APIs you have access to view.",
        "operationId": "getPetById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "limits the number of APIs returned to the selected integer",
            "required": false,
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
		  "200": {
            "description": "APIs found"
          },
		  "400": {
            "description": "APIs not Found"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Adds a new API",
        "description": "Creates a new API that must be attached to an environment. If you do not know which environment you wish to attach your API to or the ID number please us GET /environments to get an ID or POST /environments to create a new one.",
        "operationId": "CreateNewAPI",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
		 {
            "in": "formData",
            "name": "nickname",
            "description": "Title of the new operation",
            "required": true,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "summary",
            "description": "Description of the new operation",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "method",
            "description": "The method of the operation",
            "required": true,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "path",
            "description": "the path of the operation",
            "required": true,
            "type": "integer"
          },
		  {
            "in": "formData",
            "name": "api_id",
            "description": "Id of the API this operation will be attached to",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "API created",
			"schema": {
              "$ref": "#/definitions/API"
            }
          },
		  "400": {
            "description": "API not Created"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
	  
	   "put": {
        "tags": [
          "Operations"
        ],
        "summary": "Updates an API",
        "description": "Uses the ID number of an API to update the information for that record. Does not change the ID number of the API if you do not know the ID number of the API you wish to update please use GET /apis.",
        "operationId": "updateAPI",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
		{
            "in": "formData",
            "name": "id",
            "description": "ID of the operation you wish to edit",
            "required": true,
            "type": "string"
          },
		{
            "in": "formData",
            "name": "nickname",
            "description": "Title of the new operation",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "summary",
            "description": "Description of the new operation",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "method",
            "description": "The method of the operation",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "path",
            "description": "the path of the operation",
            "required": false,
            "type": "integer"
          },
		  {
            "in": "formData",
            "name": "api_id",
            "description": "Id of the API this operation will be attached to",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "API updated"
          },
		  "400": {
            "description": "API not updated"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      }
	  
    },
	
	
   "/applications/{id}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Finds an Application by id",
        "description": "Finds an Application Based on it's Joomla ID number. If you don't know the ID number for your Application please use the GET applications to find it first.",
        "operationId": "findApplicationById",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the Application you wish to find",
            "required": true,
			"type": "integer",
            "format": "integer",
            "schema": {
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application found",
			"schema": {
              "$ref": "#/API"
            }
          },
		  "400": {
            "description": "Applications not Found"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
       
      }
      
    },
	
	"/applications/{idtodelete}": {
      "delete": {
        "tags": [
          "Applications"
        ],
        "summary": "Deletes an Application by id",
        "description": "Input the ID of the Application you wish to delete.",
        "operationId": "deleteApplication",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idtodelete",
            "description": "Id of the Application you wish to delete",
            "required": true,
			"type": "integer",
            "format": "integer",
            "schema": {
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Application deleted"
          },
		  "400": {
            "description": "Applicatio not deleted"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
       
      }
      
    },   
	
	
    "/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Finds Applications",
        "description": "Returns a list of all the Applications you have access to view.",
        "operationId": "getPetById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "limits the number of Applications returned to the selected integer",
            "required": false,
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
		  "200": {
            "description": "Applications found"
          },
		  "400": {
            "description": "Applications not Found"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Adds a new Application",
        "description": "Creates a new Application.",
        "operationId": "CreateNewApplication",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "title",
            "description": "Title of the new Application",
            "required": true,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "description",
            "description": "Description of the new Application",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "productID",
            "description": "Joomla ID of the Product you wish to associate with this application",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "subscriptionID",
            "description": "Joomla ID of the Subscription you wish to associate with this application",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "application created",
			"schema": {
              "$ref": "#/definitions/API"
            }
          },
		  "400": {
            "description": "application not Created"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
	  
	   "put": {
        "tags": [
          "Applications"
        ],
        "summary": "Updates an application",
        "description": "Uses the ID number of an application to update the information for that record. Does not change the ID number of the application if you do not know the ID number of the application you wish to update please use GET /applications.",
        "operationId": "updateApplication",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
		 {
            "in": "formData",
            "name": "id",
            "description": "The Joomla id of the application you wish to update",
            "required": true,
            "type": "integer",
			"format": "integer"
          },
         {
            "in": "formData",
            "name": "title",
            "description": "Edit the Title of the application",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "description",
            "description": "Edit the Description of the application",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "productID",
            "description": "Edit the Product you wish to associate with this application",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "subscriptionID",
            "description": "Edit the Subscription you wish to associate with this application",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
           "description": "Application  updated"
          },
		  "400": {
            "description": "Application not updated"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      }
	  
    },

	"/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Finds a Product by id",
        "description": "Finds Products Based on it's Joomla ID number.",
        "operationId": "getProductsById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "description": "Id of the Product you wish to find",
            "required": true,
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found Product"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
		}},
		
		   "/products/{idtodelete}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Deletes an Product by id",
        "description": "Input the ID of the Products you wish to delete.",
        "operationId": "deleteAPI",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idtodelete",
            "description": "Id of the Product you wish to delete",
            "required": true,
			"type": "integer",
            "format": "integer",
            "schema": {
              
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted"
          },
		  "400": {
            "description": "Product not deleted"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
       
      }
      
    },
	
	"/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Finds Products",
        "description": "Returns a list of all the Products you have access to view",
        "operationId": "getProducts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description": "limits the number of Products returned to the selected integer",
            "required": false,
            "type": "integer",
            "format": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "No Products found"
          },
          "200": {
            "description": "Returned a list of Products"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Adds a new Product",
        "description": "Creates a New Product which you can then attach APIs too.",
        "operationId": "postProducts",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "title",
            "description": "Title of the new Product",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "description",
            "description": "Description of the new Product",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "ProductCategory",
            "description": "The Product Category you wish to have associated with the new Product. (Refernce Data, Market Analysis)",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "productconditions",
            "description": "Joomla ID of APIs associated with this product.",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "inlinedoc",
            "description": " the Inline documentation of the Product",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "associatedAPIs",
            "description": "Joomla ID of APIs associated with this product.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Environments not created"
          },
          "200": {
            "description": "Environments successfully created"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      },
	  
	   "put": {
        "tags": [
          "Products"
        ],
        "summary": "Updates an Product",
        "description": "",
        "operationId": "updateProduct",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
           {
            "in": "formData",
            "name": "id",
            "description": "The Joomla id of the Product you wish to update",
            "required": true,
            "type": "integer",
			"format": "integer"
          },
		  {
            "in": "formData",
            "name": "title",
            "description": "Edit the Title of the Product",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "inlinedoc",
            "description": "Edit the Inline documentation of the Product",
            "required": false,
            "type": "string"
          },
		  {
            "in": "formData",
            "name": "description",
            "description": "Edit the Description of the Product",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Product not updates"
          },
          "200": {
            "description": "Product successfully updated"
          },
		  "405": {
            "description": "Invalid input"
          }
        }
      }
    }
    
    
	
  },
  "securityDefinitions": {
    "API_key": {
      "type": "APIKey",
      "name": "API_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/API/oauth/dialog",
      "flow": "implicit"
    }
  },
    "API": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "integer",
          "xml": {
            "name": "id"
          }
        },
        "title": {
          "type": "string",
          "xml": {
            "name": "title"
          }
        },
        "published": {
          "type": "boolean",
          "xml": {
            "name": "published"
          }
        },
        "accesslevel": {
          "type": "integer",
          "xml": {
            "name": "accesslevel"
          }
        },
        "params": {
          "type": "array",
          "xml": {
            "name": "params"
          }
        },
        "user_id": {
          "type": "integer",
          "xml": {
            "name": "user_id"
          }
        },
        "section_id": {
          "type": "integer",
          "xml": {
            "name": "phone"
          }
        }
    }
    },
	
  "definitions": {
      
	  "API": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "integer",
          "xml": {
            "name": "id"
          }
        },
        "title": {
          "type": "string",
          "xml": {
            "name": "title"
          }
        },
        "published": {
          "type": "boolean",
          "xml": {
            "name": "published"
          }
        },
        "accesslevel": {
          "type": "integer",
          "xml": {
            "name": "accesslevel"
          }
        },
        "params": {
          "type": "array",
          "xml": {
            "name": "params"
          }
        },
        "user_id": {
          "type": "integer",
          "xml": {
            "name": "user_id"
          }
        },
        "section_id": {
          "type": "integer",
          "xml": {
            "name": "phone"
          }
        }
    }
    },
    "Category": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "integer",
          "xml": {
            "name": "id"
          }
        },
        "name": {
          "type": "string",
          "xml": {
            "name": "name"
          }
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Pet": {
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "integer",
          "xml": {
            "name": "id"
          }
        },
        "category": {
          "xml": {
            "name": "category"
          },
          "$ref": "Category"
        },
        "name": {
          "type": "string",
          "example": "doggie",
          "xml": {
            "name": "name"
          }
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "Tag"
          }
        },
        "status": {
          "type": "string",
          "xml": {
            "name": "status"
          },
          "description": "pet status in the store"
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "Tag": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "integer",
          "xml": {
            "name": "id"
          }
        },
        "name": {
          "type": "string",
          "xml": {
            "name": "name"
          }
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Order": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "integer",
          "xml": {
            "name": "id"
          }
        },
        "petId": {
          "type": "integer",
          "format": "integer",
          "xml": {
            "name": "petId"
          }
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "xml": {
            "name": "quantity"
          }
        },
        "shipDate": {
          "type": "string",
          "format": "date-time",
          "xml": {
            "name": "shipDate"
          }
        },
        "status": {
          "type": "string",
          "xml": {
            "name": "status"
          },
          "description": "Order Status"
        },
        "complete": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Order"
      }
    }
  }
}